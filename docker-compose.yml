services:
  structurizr:
    image: structurizr/lite 
    ports:
      - 9999:8080
    volumes:
      - .:/usr/local/structurizr:z
  auth-service:
    build: ./services/auth_service/
    env_file:
      - .env
    ports:
      - 8000:8000
    depends_on:
      pg-users:
        condition: service_healthy
  
  folder-service:
    build: ./services/folder_service/
    env_file:
      - .env
    ports:
      - 8001:8000
    depends_on:
      pg-folders:
        condition: service_healthy

  email-service:
    build: ./services/email_service/
    env_file:
      - .env
    ports:
      - 8002:8000
    depends_on:
      - mongo-emails

  pg-users:
    image: postgres:14
    volumes:
      - ./db/users/data:/var/lib/postgresql/data
      - ./db/users/init:/docker-entrypoint-initdb.d
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_USERS}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db-users"]
      interval: 5s
      timeout: 5s
      retries: 5

  pg-folders:
    image: postgres:14
    volumes:
      - ./db/folders/data:/var/lib/postgresql/data
      - ./db/folders/init:/docker-entrypoint-initdb.d
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_FOLDERS}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db-users"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo-emails:
    image: mongo:5.0
    restart: always
    volumes:
      - ./db/mongo/data:/data/db
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    ports:
      - 27017:27017

  cache:
    image: redis:alpine
    volumes:
      - ./db/redis/data:/data
    ports:
    - 6379:6379

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - auth-service
      - folder-service
      - email-service

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
